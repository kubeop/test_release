name: Docker Image && Kubernetes Release

on:
  push:
    branches:
      - "v*.*.*"
    paths:
      - 'group_vars/all.yml'

  pull_request:
    branches:
      - "v*.*.*"
    paths:
      - 'group_vars/all.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get k8s Version
      id: get_version
      run: |
        k8s_version=$(python -c "import yaml; data = yaml.safe_load(open('group_vars/all.yml')); print(data['kubernetes']['version'])")
        echo "k8s_version=$k8s_version" >> $GITHUB_ENV

    - name: Download
      if: startsWith(github.ref, 'refs/heads/')
      run: |
        wget https://dl.k8s.io/release/${{ env.k8s_version }}/bin/linux/amd64/kubectl
        wget https://dl.k8s.io/release/${{ env.k8s_version }}/bin/linux/amd64/kube-apiserver
        wget https://dl.k8s.io/release/${{ env.k8s_version }}/bin/linux/amd64/kube-controller-manager
        wget https://dl.k8s.io/release/${{ env.k8s_version }}/bin/linux/amd64/kube-scheduler
        wget https://dl.k8s.io/release/${{ env.k8s_version }}/bin/linux/amd64/kubelet
        wget https://dl.k8s.io/release/${{ env.k8s_version }}/bin/linux/amd64/kube-proxy
    
    - name: Push Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/heads/')
      with:
        token: ${{ secrets.GIT_TOKEN }}
        tag_name:  ${{ env.k8s_version }}
        preserve_order: true
        files: |
          kubectl
          kube-apiserver
          kube-controller-manager
          kube-scheduler
          kubelet
          kube-proxy
